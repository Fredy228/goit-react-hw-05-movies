{"version":3,"file":"static/js/863.122e4dbd.chunk.js","mappings":"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","sources":["components/MoviesAPI/MoviesAPI.jsx","pages/FilmDetails/FilmDetails.styled.jsx","pages/FilmDetails/FilmDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY_API = '1e08b8d990c5fa2af74f683ca643ea53';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMAGES_URL = 'https://image.tmdb.org/t/p/w500';\nexport const DEFAULT_IMG =\"https://i.ibb.co/cLM23Z5/default-card-img.jpg\";\n\nexport const getTradingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY_API}`);\n    return response.data\n};\n\nexport const getSearchMovies = async (query) => {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY_API}&query=${query}`);\n    console.log(response.data)\n    return response.data\n};\n\nexport const getMoviesDetails = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}?api_key=${KEY_API}`);\n    return response.data\n}\n\nexport const getMoviesCredits = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits?api_key=${KEY_API}`);\n    return response.data\n}\n\nexport const getMoviesReviews = async (movie_id) => {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY_API}`);\n    return response.data\n}\n\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Main = styled.main`\n    width: 100%;\n    padding: 15px 0;\n`;\n\nexport const GenerousBlock = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    padding-bottom: 5px;\n    border-bottom: 2px solid #86A3B8;\n`;\n\nexport const PicturesBlock = styled.div`\n    margin-right: 15px;\n`;\n\nexport const GenerousInfo = styled.div``;\n\nexport const TitleFilm = styled.h2`\n    font-size: 24px;\n`;\n\nexport const TextInfo = styled.p`\n    font-size: 16px;\n`;\n\nexport const TitleChapter = styled.h3`\n    font-size: 16px;\n`;\n\nexport const PictureFilm = styled.img`\n    height: auto;\n    width: 270px;\n    display: block;\n`;\n\nexport const Span = styled.span`\n    margin-right: 10px;\n    padding: 5px;\n    background-color: #E8D2A6;\n    border-radius: 5px;\n`;\n\nexport const AddInfoBar = styled.div`\n    width: 100%;\n    text-align: center;\n    padding-bottom: 10px;\n    border-bottom: 2px solid #86A3B8;\n`;\n\nexport const ListAddLink = styled.ul`\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    display: flex;\n    justify-content: center;\n`;\n\nexport const ItemAddLink = styled.li`\n    padding: 0 5px;\n`;\n\nexport const AddLink = styled(NavLink)`\n    font-size: 16px;\n    padding: 5px 10px;\n    border-radius: 5px;\n    color: black;\n    &.active {\n        background-color: #F55050;\n        color: white;\n    }\n`;\n","import { Outlet, useParams } from \"react-router-dom\";\nimport { GenerousBlock, GenerousInfo, Main, PictureFilm, PicturesBlock, TextInfo, TitleChapter, TitleFilm, Span, AddInfoBar, AddLink, ListAddLink, ItemAddLink } from \"./FilmDetails.styled\";\nimport * as MoviesAPI from '../../components/MoviesAPI/MoviesAPI';\nimport { useEffect, useRef, useState } from \"react\";\nimport { BASE_IMAGES_URL, DEFAULT_IMG } from \"../../components/MoviesAPI/MoviesAPI\";\n\nconst FilmDetails = () => {\n    const isLoading = useRef(false);\n    const [filmInfo, setFilmInfo] = useState({});\n    const {movieId} = useParams();\n    const {poster_path, title, genres, overview, release_date, vote_average} = filmInfo;\n    let urlPoster = !poster_path ? DEFAULT_IMG : `${BASE_IMAGES_URL}${poster_path}`;\n    let dataFiml = release_date ? release_date.slice(0,4) : 'Data unknow';\n\n    useEffect(() => {\n        MoviesAPI.getMoviesDetails(movieId).then(results => {\n            setFilmInfo(results);\n        }).then(()=> {\n            isLoading.current = true;\n        })\n    }, [movieId]);\n\n    if(isLoading) {\n        return(\n            <Main>\n                <GenerousBlock>\n                    <PicturesBlock>\n                        <PictureFilm src={urlPoster}/>\n                    </PicturesBlock>\n                    <GenerousInfo>\n                        <TitleFilm>{`${title} (${dataFiml})`}</TitleFilm>\n                        <TextInfo>User Score: { `${Math.round(vote_average * 10)}%`}</TextInfo>\n                        <TitleChapter>Overview</TitleChapter>\n                        <TextInfo>{overview}</TextInfo>\n                        <TitleChapter>Genres</TitleChapter>\n                        <TextInfo>{genres && genres.map(item => {\n                            return(<Span key={item.id}>{item.name}</Span>)\n                        })}</TextInfo>\n                    </GenerousInfo>\n                </GenerousBlock>\n                <AddInfoBar>\n                    <TitleChapter>Additional information</TitleChapter>\n                    <ListAddLink>\n                        <ItemAddLink>\n                            <AddLink to='cast'>Cast</AddLink>\n                        </ItemAddLink>\n                        <ItemAddLink>\n                            <AddLink to='reviews'>Reviews</AddLink>\n                        </ItemAddLink>\n                    </ListAddLink>\n                </AddInfoBar>\n    \n                <Outlet/>\n            </Main>\n        )\n    }\n};\n\nexport default FilmDetails;"],"names":["KEY_API","BASE_URL","BASE_IMAGES_URL","DEFAULT_IMG","getTradingMovies","axios","response","data","getSearchMovies","query","console","log","getMoviesDetails","movie_id","getMoviesCredits","getMoviesReviews","Main","styled","GenerousBlock","PicturesBlock","GenerousInfo","TitleFilm","TextInfo","TitleChapter","PictureFilm","Span","AddInfoBar","ListAddLink","ItemAddLink","AddLink","NavLink","isLoading","useRef","useState","filmInfo","setFilmInfo","movieId","useParams","poster_path","title","genres","overview","release_date","vote_average","urlPoster","dataFiml","slice","useEffect","MoviesAPI","then","results","current","src","Math","round","map","item","name","id","to"],"sourceRoot":""}